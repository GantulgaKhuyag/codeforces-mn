// Generated by CoffeeScript 1.6.2
String.prototype.start_with = function(str) {
  return this.substr(0, str.length) === str;
};

String.prototype.end_with = function(str) {
  return this.slice(-str.length) === str;
};

String.prototype.contain = function(str) {
  return this.indexOf(str) > -1;
};

String.prototype.is_numeric = function() {
  return !isNaN(parseFloat(this)) && isFinite(this);
};

$(function() {
  var problem_id, storage;

  storage = JSON.parse(localStorage.mn || "{}");
  if (location.pathname.start_with("/problemset" && !location.pathname.start_with("/problemset/problem"))) {
    $.ajax({
      url: "https://raw.github.com/gmunkhbaatarmn/codeforces-mn/master/out/data.txt",
      dataType: "text",
      async: false,
      success: function(text) {
        var id, _i, _len, _ref;

        storage = {};
        storage.updated = new Date().getTime() / 1000;
        _ref = text.split("|");
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          id = _ref[_i];
          storage[id] = 1;
        }
        return localStorage.mn = JSON.stringify(storage);
      }
    });
  }
  if (location.pathname.start_with("/problemset")) {
    $("head").append("<style>\n  .mn-translated td a { color: green; font-weight: bold; text-decoration: none }\n  .mn-translation a { color: green !important; font-weight: bold; padding: 1px 5px 2px; border-radius: 3px }\n  .mn-translation a:hover { color: #fff !important; background: #069100 !important }\n  .problem-statement .math { font-size: 125%; font-family: times new roman,sans-serif }\n</style>");
    $("table.problems tr").each(function() {
      var problem_id;

      problem_id = $.trim($(this).find("td.id").text());
      problem_id = problem_id.slice(0, -1) + "-" + problem_id.slice(-1);
      if (storage[problem_id] !== void 0) {
        return $(this).addClass("mn-translated");
      }
    });
  }
  if (location.pathname.start_with("/problemset/problem/")) {
    problem_id = location.pathname.replace("/problemset/problem/", "").replace("/", "-").toUpperCase();
    if (storage[problem_id] !== void 0) {
      $(".problem-statement .header .title").after("<div class=\"mn-translation\"><a href=\"javascript:;\">Монголоор унших</a></div>");
    }
  }
  return $(".mn-translation a").on("click", function() {
    problem_id = location.pathname.replace("/problemset/problem/", "").replace("/", "-").toUpperCase();
    while (problem_id.length < 5) {
      problem_id = "0" + problem_id;
    }
    return $.ajax({
      url: "https://raw.github.com/gmunkhbaatarmn/codeforces-mn/master/out/" + problem_id + ".html",
      dataType: "html",
      async: false,
      success: function(data) {
        var $data, body, curr;

        $data = $("<div/>").html(data);
        $(".header .title").html(problem_id.slice(-1)(+". " + $data.find("h1").html()));
        curr = $data.find("h1").next();
        body = [];
        while (curr.length) {
          if (curr[0].tagName === "P") {
            body.push("<p>" + curr.html() + "</p>");
            curr = curr.next();
          } else {
            curr = [];
          }
        }
        $(".header").next().html(body.join("\n"));
        curr = $data.find("h3").next();
        body = [];
        while (curr.length) {
          if (curr[0].tagName === "P") {
            body.push("<p>" + curr.html() + "</p>");
            curr = curr.next();
          } else {
            curr = [];
          }
        }
        $(".input-specification").html("<div class=\"section-title\">Оролт</div>" + (body.join("\n")));
        curr = $data.find("h3:last").next();
        body = [];
        while (curr.length) {
          if (curr[0].tagName === "P") {
            body.push("<p>" + curr.html() + "</p>");
            curr = curr.next();
          } else {
            curr = [];
          }
        }
        $(".output-specification").html("<div class=\"section-title\">Гаралт</div>" + (body.join("\n")));
        return $(".mn-translation").fadeOut();
      }
    });
  });
});
